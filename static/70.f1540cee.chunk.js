webpackJsonp([70],{2174:function(e,t,n){var o=n(0),s=n(94),c=n(467).PageRenderer;c.__esModule&&(c=c.default);var a=s({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:n(2258)}},componentWillMount:function(){},render:function(){return o.createElement(c,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,e.exports=a},2258:function(e,t){e.exports='For the next major version of Styled UI, the Checkbox component has been rebuilt to use our global Styled System theme and two new config components instead of its legacy `theme` prop.\n\nYou can opt in to the new API now by importing `{ Checkbox } from \'@faithlife/styled-ui/v6\'`. When v6 is released, the `/v6` entrypoint will continue to be supported with a deprecation warning until v7 is released.\n\n### Default theme\n\n```react\nshowSource: true\nstate: { isChecked: false }\n---\n<CheckboxDemo>\n\t<Checkbox\n\t\tonClick={() => setState({ isChecked: !state.isChecked })}\n\t\tisChecked={state.isChecked}\n\t\ttitle="Click me"\n\t\ttype="button"\n\t/>\n</CheckboxDemo>\n```\n\n### Mixed value\n\n```react\nshowSource: true\nstate: { isChecked: \'mixed\' }\n---\n<CheckboxDemo>\n\t<Checkbox\n\t\tonClick={() => setState({ isChecked: ({ [true]: false, [false]: \'mixed\', mixed: true })[state.isChecked] })}\n\t\tisChecked={state.isChecked}\n\t\ttitle="Click me"\n\t\ttype="button"\n\t/>\n</CheckboxDemo>\n```\n\n### Custom theme\n\n```react\nshowSource: true\nstate: { isChecked: false }\n---\n<CheckboxDemo>\n\t<ThemeProvider theme={{\n\t\tcolors: {\n\t\t\tcheckbox: { primary: \'darkslateblue\', border: \'plum\' }\n\t\t}\n\t}}>\n\t\t<Checkbox\n\t\t\tonClick={() => setState({ isChecked: !state.isChecked })}\n\t\t\tisChecked={state.isChecked}\n\t\t\ttitle="Click me"\n\t\t/>\n\t</ThemeProvider>\n</CheckboxDemo>\n```\n\n### Custom label component\n\n```react\nshowSource: true\nstate: { isChecked: false }\n---\n<CheckboxDemo>\n\t<Checkbox\n\t\tonClick={() => setState({ isChecked: !state.isChecked })}\n\t\tisChecked={state.isChecked}\n\t\ttype="button"\n\t>\n\t\t<span>No, click <b>me</b>!</span>\n\t</Checkbox>\n</CheckboxDemo>\n```\n\n### Disabled state\n\n```react\nshowSource: true\nstate: { isChecked: false }\n---\n<CheckboxDemo>\n\t<Checkbox\n\t\tonClick={() => setState({ isChecked: !state.isChecked })}\n\t\tisChecked={state.isChecked}\n\t\ttitle="Click me"\n\t\ttype="button"\n\t\tdisabled\n\t/>\n</CheckboxDemo>\n```\n\n### Custom box/label props\n\nExtra props on the `Checkbox` component are passed to the entire checkbox container. To pass Styled System props to just the box or just the label, use `Checkbox.Box` and/or `Checkbox.Label` config components.\n\n```react\nshowSource: true\nstate: { isChecked: false }\n---\n<CheckboxDemo>\n\t<Checkbox\n\t\tonClick={() => setState({ isChecked: !state.isChecked })}\n\t\tisChecked={state.isChecked}\n\t\ttype="button"\n\t>\n\t\t<Checkbox.Box size="25px" />\n\t\t<Checkbox.Label color="red">A big box and a red label</Checkbox.Label>\n\t</Checkbox>\n</CheckboxDemo>\n```\n'}});
//# sourceMappingURL=70.f1540cee.chunk.js.map