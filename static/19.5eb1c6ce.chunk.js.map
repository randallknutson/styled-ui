{"version":3,"sources":["webpack:///static/19.5eb1c6ce.chunk.js","webpack:///./catalog/radio/variations-v6.md?e09b","webpack:///./catalog/radio/variations-v6.md"],"names":["webpackJsonp","2211","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","2295"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCF7B,GAAIC,GAAQ,EAAQ,GAChBC,EAAmB,EAAQ,IAC3BC,EAAe,EAAQ,KAAWA,YAClCA,GAAaC,aACfD,EAAeA,EAAaE,QAE9B,IAAIC,GAAsBJ,GACxBK,YAAa,sBACbC,gBAAiB,WACf,OAAQC,QAAS,EAAQ,QAE3BC,mBAAoB,aAUpBC,OAAQ,WACN,MAAOV,GAAMW,cAAcT,EAAcU,OAAOC,UAAWC,KAAKC,OAAQP,QAASM,KAAKE,MAAMR,aAGhGH,GAAoBY,oBAAqB,EACzCpB,EAAOC,QAAUO,GDUfa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAOC,QAAU","file":"static/19.5eb1c6ce.chunk.js","sourcesContent":["webpackJsonp([19],{\n\n/***/ 2211:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(94);\n    var PageRenderer = __webpack_require__(467).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(2295)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 2295:\n/***/ (function(module, exports) {\n\nmodule.exports = \"For the next major version of Styled UI, the Radio component has been rebuilt to use our global Styled System theme and two new config components instead of its legacy `theme` prop.\\n\\nYou can opt in to the new API now by importing `{ Radio } from '@faithlife/styled-ui/v6'`. When v6 is released, the `/v6` entrypoint will continue to be supported with a deprecation warning until v7 is released.\\n\\n### Default theme\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttitle={'Click me'}\\n\\t\\ttype=\\\"button\\\"\\n\\t/>\\n</RadioDemo>\\n```\\n\\n### Custom theme\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<ThemeProvider theme={{\\n\\t\\tcolors: {\\n\\t\\t\\tradio: { primary: 'darkslateblue', border: 'plum' }\\n\\t\\t}\\n\\t}}>\\n\\t\\t<Radio\\n\\t\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\t\\tisChecked={state.isChecked}\\n\\t\\t\\ttitle={'Click me'}\\n\\t\\t\\ttype=\\\"button\\\"\\n\\t\\t/>\\n\\t</ThemeProvider>\\n</RadioDemo>\\n```\\n\\n### Custom label component\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttype=\\\"button\\\"\\n\\t>\\n\\t\\t<span>No, click <b>me</b>!</span>\\n\\t</Radio>\\n</RadioDemo>\\n```\\n\\n### Disabled state\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttitle={'You can\\\\'t click me'}\\n\\t\\ttype=\\\"button\\\"\\n\\t\\tdisabled\\n\\t>\\n\\t</Radio>\\n</RadioDemo>\\n```\\n\\n### Custom icon/label props\\n\\nExtra props on the `Radio` component are passed to the container. To pass Styled System props to just the icon or just the label, use `Radio.Icon` and/or `Radio.Label` config components.\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttype=\\\"button\\\"\\n\\t>\\n\\t\\t<Radio.Icon size=\\\"25px\\\" />\\n\\t\\t<Radio.Label color=\\\"red\\\">A bigger icon and a red label</Radio.Label>\\n\\t</Radio>\\n</RadioDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/19.5eb1c6ce.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations-v6.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/radio/variations-v6.md\n// module id = 2211\n// module chunks = 19","module.exports = \"For the next major version of Styled UI, the Radio component has been rebuilt to use our global Styled System theme and two new config components instead of its legacy `theme` prop.\\n\\nYou can opt in to the new API now by importing `{ Radio } from '@faithlife/styled-ui/v6'`. When v6 is released, the `/v6` entrypoint will continue to be supported with a deprecation warning until v7 is released.\\n\\n### Default theme\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttitle={'Click me'}\\n\\t\\ttype=\\\"button\\\"\\n\\t/>\\n</RadioDemo>\\n```\\n\\n### Custom theme\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<ThemeProvider theme={{\\n\\t\\tcolors: {\\n\\t\\t\\tradio: { primary: 'darkslateblue', border: 'plum' }\\n\\t\\t}\\n\\t}}>\\n\\t\\t<Radio\\n\\t\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\t\\tisChecked={state.isChecked}\\n\\t\\t\\ttitle={'Click me'}\\n\\t\\t\\ttype=\\\"button\\\"\\n\\t\\t/>\\n\\t</ThemeProvider>\\n</RadioDemo>\\n```\\n\\n### Custom label component\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttype=\\\"button\\\"\\n\\t>\\n\\t\\t<span>No, click <b>me</b>!</span>\\n\\t</Radio>\\n</RadioDemo>\\n```\\n\\n### Disabled state\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttitle={'You can\\\\'t click me'}\\n\\t\\ttype=\\\"button\\\"\\n\\t\\tdisabled\\n\\t>\\n\\t</Radio>\\n</RadioDemo>\\n```\\n\\n### Custom icon/label props\\n\\nExtra props on the `Radio` component are passed to the container. To pass Styled System props to just the icon or just the label, use `Radio.Icon` and/or `Radio.Label` config components.\\n\\n```react\\nshowSource: true\\nstate: { isChecked: false }\\n---\\n<RadioDemo>\\n\\t<Radio\\n\\t\\tonClick={() => setState({ isChecked: !state.isChecked })}\\n\\t\\tisChecked={state.isChecked}\\n\\t\\ttype=\\\"button\\\"\\n\\t>\\n\\t\\t<Radio.Icon size=\\\"25px\\\" />\\n\\t\\t<Radio.Label color=\\\"red\\\">A bigger icon and a red label</Radio.Label>\\n\\t</Radio>\\n</RadioDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/radio/variations-v6.md\n// module id = 2295\n// module chunks = 19"],"sourceRoot":""}